name: Nix Flake actions

on:
  pull_request:
  push:

jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
      fail-fast: false
    steps:
      - name: Maximize build space
        uses: mio-19/maximize-build-space@patch-1
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          overprovision-lvm: 'true'
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          remove-docker-images: 'true'
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - run: nix build -L '.#${{ matrix.attr }}' --option extra-substituters https://robotnix.cachix.org --option extra-trusted-public-keys robotnix.cachix.org-1:+y88eX6KTvkJyernp1knbpttlaLTboVp4vq/b24BIv0= --option extra-substituters https://nix-community.cachix.org/ --option extra-trusted-public-keys nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs=
      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: result
